---
openapi: 3.0.0

info:
  title: Kanbanflow API
  description: Lean project management. Simplified.
  version: 0.0.1
  license:
    name: MIT

servers:
  - url: https://kanbanflow.com/api/v1
    description: Kanbanflow API server

security:
  - BasicAuth: []

paths:
  /board:
    get:
      summary: Returns the structure of the board belonging to the token.
      operationId: getBoard
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Board"
  /tasks/{taskId}:
    get:
      summary: Returns a single task by ID
      operationId: getTaskById
      parameters:
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: The ID of the task to return
        - in: query
          name: includePosition
          schema:
            type: boolean
          required: false
          description: Include the task's position in the column/swimlane
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
  /tasks:
    get:
      summary: Return all tasks on a board
      operationId: getAllTasks
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TasksByColumn"
    post:
      summary: Creates a new task
      operationId: createTask
      requestBody:
        description: the new task spec
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTaskResponse"

components:

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    Column:
      type: object
      properties:
        name:
          type: string
        uniqueId:
          type: string
    Swimlane:
      type: object
      properties:
        name:
          type: string
        uniqueId:
          type: string
    Color:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        description:
          type: string
    Board:
      type: object
      required:
        - _id
        - name
        - columns
        - colors
      properties:
        _id:
          type: string
        name:
          type: string
        columns:
          type: array
          items:
            $ref: "#/components/schemas/Column"
        swimlanes:
          type: array
          items:
            $ref: "#/components/schemas/Swimlane"
        colors:
          type: array
          items:
            $ref: "#/components/schemas/Color"

    Task:
      type: object
      required:
        - name
      properties:
        _id:
          type: string
        name:
          type: string
        columnId:
          type: string
        columnIndex:
          type: integer
        swimlaneId:
          type: string
        position:
          type: string
        description:
          type: string
        color:
          type: string
        number:
          type: string
        responsibleUserId:
          type: string
        totalSecondsSpent:
          type: integer
        totalSecondsEstimate:
          type: integer
        pointsEstimate:
          type: float
        groupingDate:
          type: string
        dates:
          type: array
          items:
            $ref: "#/components/schemas/TaskDate"
        subTasks:
          type: array
          items:
            $ref: "#/components/schemas/TaskSubTask"
        labels:
          type: array
          items:
            $ref: "#/components/schemas/TaskLabel"
        collaborators:
          type: array
          items:
            $ref: "#/components/schemas/TaskCollaborator"

    TasksByColumn:
      type: object
      required:
        - columnId
        - columnName
      properties:
        columnId:
          type: string
        columnName:
          type: string
        swimlaneId:
          type: string
        swimlaneName:
          type: string
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"

    TaskDate:
      type: object
      properties:
        status:
          type: string
        dateType:
          type: string
        dueTimestamp:
          type: string
        dueTimestampLocal:
          type: string
        targetColumnId:
          type: string

    TaskSubTask:
      type: object
      properties:
        name:
          type: string
        finished:
          type: boolean
        dueDateTimestamp:
          type: string
        dueDateTimestampLocal:
          type: string

    TaskLabel:
      type: object
      properties:
        name:
          type: string
        pinned:
          type: boolean

    TaskCollaborator:
      type: object
      properties:
        userId:
          type: string

    CreateTaskResponse:
      type: object
      properties:
        taskId:
          type: string
